

Class Variables

private AndroidJavaObject jo; // for bluetooth socket reads


Android Plugin Calls--Place in Start() function

jo = new AndroidJavaObject("com.you.bluetoothreceive");
jo.Call("findBT");
jo.Call("openBT");


    


More Plugin Calls--deals with jumping. 
The contents of the if-blocks may be incorrect for now, but pseudocode of this nature
goes in the Update() function

command = jo.Call<int>("readBT");
if (command == 1)
{
	Vector3 jump = new Vector3 (0.0f, 150.0f, 0.0f);
	m_RigidBody.AddForce(jump);
}
    else if (command == 2) // Turn by 90 degrees, maintain velocity. This looks jarring in FP mode
{
    m_RigidBody.velocity = Quaternion.AngleAxis(90.0f, Vector3.up) * m_RigidBody.velocity;
    m_RigidBody.velocity = new Vector3(((m_RigidBody.velocity.x)/(m_RigidBody.velocity.magnitude)) * magnitude, ((m_RigidBody.velocity.y) / (m_RigidBody.velocity.magnitude)) * magnitude, ((m_RigidBody.velocity.z) / (m_RigidBody.velocity.magnitude)) * magnitude);
}
    else if (command == 3)
{
	m_RigidBody.velocity = Quaternion.AngleAxis(-90.0f, Vector3.up) * m_RigidBody.velocity;
	m_RigidBody.velocity = new Vector3(((m_RigidBody.velocity.x)/(m_RigidBody.velocity.magnitude)) * magnitude, ((m_RigidBody.velocity.y) / (m_RigidBody.velocity.magnitude)) * magnitude, ((m_RigidBody.velocity.z) / (m_RigidBody.velocity.magnitude)) * magnitude);
}